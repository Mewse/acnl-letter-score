{"version":3,"sources":["logo.svg","components/DetailCheckList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DetailCheckList","props","react_default","a","createElement","className","scope","punctuationScore","trigramScore","capitalScore","repetitionScore","spaceRatioScore","lengthScore","spaceScore","colspan","total","App","state","score","message","showBreakdown","text","this","setState","_this2","placeholder","value","onChange","event","onMessageChange","target","onClick","getScore","bind","components_DetailCheckList","_this3","axios","post","then","response","console","log","data","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76222d8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nconst DetailCheckList = (props) => {\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\" className=\"w-25\">Check</th>\r\n                        <th scope=\"col\">Rule</th>\r\n                        <th scope=\"col\" className=\"w-25\">Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Punctuation</td>\r\n                        <td>\r\n                            +10 for every capital letter within 3 characters after punctuation, -10 if not present.\r\n                            +20 for the final character being punctuation (\"?\", \".\", \"!\")\r\n                        </td>\r\n                        <td className={props.punctuationScore > 0 ? \"table-success\" : \"table-danger\" }>{props.punctuationScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Trigrams</td>\r\n                        <td>\r\n                            +1 for every word that starts with a common trigram multiplied by 3\r\n                        </td>\r\n                        <td className={props.trigramScore > 0 ? \"table-success\" : \"table-danger\" }>{props.trigramScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Capital</td>\r\n                        <td>\r\n                            +20 If the first non-space character is a capital. Otherwise, -10\r\n                        </td>\r\n                        <td className={props.capitalScore > 0 ? \"table-success\" : \"table-danger\" }>{props.capitalScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Repetition</td>\r\n                        <td>\r\n                            -50 if you repeat the same character 3 times in a row anywhere in your message\r\n                        </td>\r\n                        <td className={props.repetitionScore >= 0 ? \"table-success\" : \"table-danger\" }>{props.repetitionScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Space-Ratio</td>\r\n                        <td>\r\n                            -20 If the number or spaces divided by the total character count of your message is below 0.2. Otherwise, +20\r\n                        </td>\r\n                        <td className={props.spaceRatioScore > 0 ? \"table-success\" : \"table-danger\" }>{props.spaceRatioScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Length</td>\r\n                        <td>\r\n                            -150 if your message is over 75 characters and you have a section of text that goes 75 characters without punctuation.\r\n                        </td>\r\n                        <td className={props.lengthScore >= 0 ? \"table-success\" : \"table-danger\" }>{props.lengthScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Spaces</td>\r\n                        <td>\r\n                            +20 for every 32 character block that contains a space. -20 for every block that doesn't.\r\n                        </td>\r\n                        <td className={props.spaceScore > 0 ? \"table-success\" : \"table-danger\" }>{props.spaceScore}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            Total:\r\n                        </td>\r\n                        <td>{props.total}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailCheckList;","import React from 'react';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport DetailCheckList from \"./components/DetailCheckList\";\n\nclass App extends React.Component {\n  state = {\n      score: {\n          punctuationScore: 0,\n          trigramScore: 0,\n          capitalScore: 0,\n          repetitionScore: 0,\n          spaceRatioScore: 0,\n          lengthScore: 0,\n          spaceScore: 0,\n          total: 0\n      },\n      message: \"\",\n      showBreakdown: false\n  };\n\n  onMessageChange(text) {\n    this.setState({message: text});\n  }\n\n  render() {\n      return (\n          <div className=\"App\">\n            <div className=\"w-50 w-sm-100 mx-auto\">\n              <h1 className=\"App-header\"> ACNL Letter Scorer</h1>\n              <textarea className=\"form-control mt-5\"\n                        placeholder=\"Enter your message here..\"\n                        value={this.state.message} onChange={(event) => this.onMessageChange(event.target.value)}/>\n              <button className=\"btn btn-primary m-2\" onClick={this.getScore.bind(this)}>Submit</button>\n                {this.state.showBreakdown ? <DetailCheckList {...this.state.score} /> : \"\"}\n            </div>\n\n          </div>\n      );\n  }\n\n  getScore() {\n    axios.post(\"/score\", {message:this.state.message})\n        .then(response => {\n            console.log(response);\n            this.setState({score: response.data, showBreakdown:true})\n        })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}